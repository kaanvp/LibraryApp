<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="siticoneRadialPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>